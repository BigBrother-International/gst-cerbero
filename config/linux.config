# This file contains the default configuration to compile for Linux
# platforms. It contains sensitive enviroment configuration that
# shouldn't be modified unless you know what you are doing.
# PLEASE, DO NOT EDIT THIS FILE

import os
from cerbero.config import Architecture

if 'noalsa' not in variants:
    variants.append('alsa')
if 'nox11' not in variants:
    variants.append('x11')
if 'nopulse' not in variants:
    variants.append('pulse')
if 'nocdparanoia' not in variants:
    variants.append('cdparanoia')
if 'nov4l2' not in variants:
    variants.append('v4l2')
if 'nosdl' not in variants:
    variants.append('sdl')
if 'nogtk' not in variants:
    variants.append('gtk')

for f in ['CFLAGS', 'CCASFLAGS', 'CXXFLAGS', 'LDFLAGS', 'OBJCFLAGS']:
    os.environ[f] = os.environ.get(f, '')

arch_flags = ''
tools_prefix = ''
if target_arch == Architecture.X86:
    arch_flags += ' -m32 '
    _host = 'i686-linux-gnu'
elif target_arch == Architecture.X86_64:
    arch_flags += ' -m64 '
    _host = 'x86_64-linux-gnu'
if target_arch in [Architecture.ARM, Architecture.ARMv7]:
    if target_arch == Architecture.ARMv7:
       arch_flags += ' -march=armv7-a '
    _host = 'arm-linux-gnueabi'
    tools_prefix = 'arm-linux-gnueabi-'
    os.environ['glib_cv_stack_grows'] = 'no'
    os.environ['glib_cv_uscore'] = 'no'
    os.environ['ac_cv_func_posix_getgrgid_r'] = 'yes'
    os.environ['ac_cv_func_posix_getpwuid_r'] = 'yes'

if host is None and target_arch != arch:
    host = _host

os.environ['CFLAGS'] += ' -Wall -g -O2' + arch_flags
os.environ['CXXFLAGS'] += ' -Wall -g -O2' + arch_flags
os.environ['OBJCFLAGS'] += ' -Wall -g -O2' + arch_flags
os.environ['CCASFLAGS'] += ' -Wall -g -O2' + arch_flags
os.environ['LDFLAGS'] += arch_flags
os.environ['am_cv_python_pyexecdir'] = '%s/%s/site-packages' % (prefix, py_prefix)
os.environ['am_cv_python_pythondir'] = '%s/%s/site-packages' % (prefix, py_prefix)

def cmd(command):
    return '%s%s' % (tools_prefix, command)

os.environ['CC']= cmd('gcc')
os.environ['CXX']= cmd('g++')
os.environ['LD']= cmd('ld')
os.environ['CPP']= cmd('cpp')
os.environ['RANLIB']= cmd('ranlib')
os.environ['AR']= cmd('ar')
os.environ['AS']= cmd('as')
os.environ['NM']= cmd('nm')
os.environ['STRIP']= cmd('strip')
os.environ['OBJCOPY']= cmd('objcopy')

if use_ccache:
    os.environ['CC'] += 'ccache gcc'
    os.environ['CXX'] += 'ccache g++'
