class Recipe(recipe.Recipe):
    name = 'gcc-core'
    version = '4.6.2'
    commit = 'sdk-release-sdk-2012.5'
    licenses = [License.GPLv3]
    configure_options = '--disable-multilib --enable-fully-dynamic-string'
    make = 'make all-gcc'
    make_install = 'make install-gcc'
    use_system_libs = True
    supports_non_src_build = True
    deps = ['mingw-w64-headers', 'gmp', 'mpfr', 'mpc']

    def prepare(self):
        self.remotes = {'origin': '%s/%s' %
                        (self.config.git_root, 'gcc')}
        self.repo_dir = os.path.join(self.config.local_sources, 'gcc')
        self.build_dir = os.path.join(self.config.sources, 'gcc-%s' %
                                      self.version)
        self.make_dir = os.path.abspath(os.path.join(self.build_dir,
                                                     self.srcdir))

        if self.config.target_arch == Architecture.X86:
            target = 'i686-w64-mingw32'
        else:
            target = 'x86_64-w64-mingw32'
        self.configure_options += ' --target=%s' % target
        if self.config.target_platform == Platform.WINDOWS:
            self.allow_parallel_build = False

    def configure(self):
        from cerbero.utils import shell
        # Create the winsup directory
        if self.config.target_platform == Platform.WINDOWS:
            winsup = os.path.join(self.build_dir, 'gcc', 'winsup', 'mingw')
            if not os.path.exists(winsup):
                os.makedirs(winsup)
            shell.call('ln -s %s/%s/include include' %
                    (self.config.toolchain_prefix, self.config.host), winsup,
                    fail=False)
        super(Recipe, self).configure()
